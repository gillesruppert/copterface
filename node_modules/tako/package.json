{
  "name": "tako",
  "description": "Functional web framework.",
  "tags": [
    "http",
    "simple",
    "util",
    "utility",
    "web",
    "framework",
    "webframework"
  ],
  "version": "0.3.0",
  "author": {
    "name": "Mikeal Rogers",
    "email": "mikeal.rogers@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/mikeal/tako.git"
  },
  "bugs": {
    "url": "http://github.com/mikeal/tako/issues"
  },
  "main": "./index.html",
  "dependencies": {
    "filed": ">= 0.0.6",
    "mapleTree": "*"
  },
  "devDependencies": {
    "request": "2.9.x"
  },
  "scripts": {
    "test": "node tests/run.js"
  },
  "readme": "# tako -- Functional web framework.\n\n## Install\n\n<pre>\n  npm install tako\n</pre>\n\n## Add Sockets\n\n<pre>\n  npm install socket.io\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/mikeal/tako.git \n  cd tako\n  npm link\n</pre>\n\n## Usage\n\n```javascript\nvar tako = require('tako')\n  , request = require('request')\n  , path = require('path')\n  , app = tako()\n  ;\n\napp.route('/static/*').files(path.join(__dirname, 'static'))\n\napp.route('/proxypass', function (req, resp) {\n  req.pipe(request(\"http://otherserver.com\"+req.url)).pipe(resp)\n})\n\napp.route('/hello.json').json({msg:'hello!'})\n\napp.route('/plaintext').text('I like text/plain')\n\napp.route('/')\n  .html(function (req, resp) {\n    request('http://me.iriscouch.com/db', {json:true}, function (e, r) {\n      if (e) return resp.error(e)\n      if (r.statusCode !== 200) return resp.error(r)\n      resp.end('<html><head>cool</head><body>'+r.body.index+'</body></html>')\n    })\n  })\n  .methods('GET')\n  ;\n\n// Ported example from socket.io docs to show integration\napp.sockets.on('connection', function (socket) {\n  app.sockets.emit('news', { will: 'be received by everyone'});\n  socket.on('disconnect', function () {\n    app.sockets.emit('user disconnected')\n  })\n})\n  \napp.httpServer.listen(80)\napp.httpsServer.listen(443)\n```\n\n### Routing multiple domains\n\n```javascript\nvar tako = require('../index')\n  , app1 = tako()\n  , app2 = tako()\n  , default = tako()\n  , router = tako.router()\n  ;\n  \napp1.route('/name').text('app1')\napp2.route('/name').text('app2')\ndefault.route('/name').text('default')\n\nrouter.host('app1.localhost', app1)\nrouter.host('app2.localhost', app2)\nrouter.default(default)\n\nrouter.httpServer.listen(80)\nrouter.httpsServer.listen(443)\n```",
  "_id": "tako@0.3.0",
  "dist": {
    "shasum": "5e417b4d156d4a33563207211b242ce313f6ab37"
  },
  "_from": "tako"
}
